// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questionario.Backend.Data;

#nullable disable

namespace Questionario.Backend.Migrations
{
    [DbContext(typeof(QuestionarioBackendContext))]
    partial class QuestionarioBackendContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Questionario.Backend.Models.Convenio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("Questionario.Backend.Models.FaixaIdade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FaixaIdade");
                });

            modelBuilder.Entity("Questionario.Backend.Models.FaixaSalarial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FaixaSalarial");
                });

            modelBuilder.Entity("Questionario.Backend.Models.MotivoEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotivoEmprestimo");
                });

            modelBuilder.Entity("Questionario.Backend.Models.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConvenioId")
                        .HasColumnType("int");

                    b.Property<int>("FaixaIdadeId")
                        .HasColumnType("int");

                    b.Property<int>("FaixaSalarialId")
                        .HasColumnType("int");

                    b.Property<int>("MotivoEmprestimoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId");

                    b.HasIndex("FaixaIdadeId");

                    b.HasIndex("FaixaSalarialId");

                    b.HasIndex("MotivoEmprestimoId");

                    b.ToTable("Resposta");
                });

            modelBuilder.Entity("Questionario.Backend.Models.Resposta", b =>
                {
                    b.HasOne("Questionario.Backend.Models.Convenio", "Convenio")
                        .WithMany()
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questionario.Backend.Models.FaixaIdade", "FaixaIdade")
                        .WithMany()
                        .HasForeignKey("FaixaIdadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questionario.Backend.Models.FaixaSalarial", "FaixaSalarial")
                        .WithMany()
                        .HasForeignKey("FaixaSalarialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Questionario.Backend.Models.MotivoEmprestimo", "MotivoEmprestimo")
                        .WithMany()
                        .HasForeignKey("MotivoEmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenio");

                    b.Navigation("FaixaIdade");

                    b.Navigation("FaixaSalarial");

                    b.Navigation("MotivoEmprestimo");
                });
#pragma warning restore 612, 618
        }
    }
}
